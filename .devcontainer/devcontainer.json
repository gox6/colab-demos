
// https://marioscalas.medium.com/using-python-and-poetry-inside-a-dev-container-33c80bc5a22c. Medium article on how to use poetry in a devcontainer.
// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.231.6/containers/python-3
{
  "name": "Project: colab-demos - Py 3.11",
  "build": {
    "dockerfile": "Dockerfile",
    "context": "..",
    "args": {
      // Update 'VARIANT' to pick a Python version: 3, 3.10, 3.9, 3.8, 3.7, 3.6
      // Append -bullseye or -buster to pin to an OS version.
      // Use -bullseye variants on local on arm64/Apple Silicon.
      "VARIANT": "3.11-bullseye",
      // Options
      // "POETRY_VERSION": "1.7.1",
    }
  },
  "containerEnv": {
    "PROJECT_PATH": "${containerWorkspaceFolder}"
},

// Set *default* container specific settings.json values on container create.
 "settings":  {
	"python.analysis.indexing": true,
	"python.analysis.autoImportCompletions": true,
	"python.analysis.typeCheckingMode": "basic",
	"python.languageServer": "Pylance",
	"python.analysis.extraPaths": [
		"/workspaces/*"
	],
// Ruff configuration


  "[python]": {
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.fixAll": true,
      "source.organizeImports": true
    },
    "editor.defaultFormatter": "charliermarsh.ruff",
  },
  "notebook.formatOnSave.enabled": true,
  "notebook.codeActionsOnSave": {
    "notebook.source.fixAll": true,
    "notebook.source.organizeImports": true
  },

	"ruff.showNotifications": "onWarning",
"code-runner.executorMap": {
    "python": "${PYTHONPATH}",
},

"code-runner.defaultLanguage": "python",
"code-runner.saveFileBeforeRun": true,

}



    ,
  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "ms-python.python",
    "ms-python.vscode-pylance",
    "formulahendry.code-runner",
    "GitHub.copilot",
    "GitHub.copilot-chat",
    "charliermarsh.ruff",
    "njpwerner.autodocstring",
    "ms-azuretools.vscode-docker",
    "redhat.vscode-yaml",
    "ms-toolsai.jupyter-keymap",
    "ms-toolsai.jupyter",
    "ms-toolsai.vscode-jupyter-cell-tags",
    "ms-toolsai.vscode-jupyter-slideshow",
    "ms-python.debugpy"
  ],
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],
  // Install project dependencies
  // "postCreateCommand": "poetry install",
  "postCreateCommand": "bash ./.devcontainer/post-install.sh",
  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "vscode",
  "features": {
    "github-cli": "latest"
  },
  "mounts": [
    // Re-use local Git configuration
    "source=${localEnv:HOME}/.gitconfig,target=/home/vscode/.gitconfig,type=bind,consistency=cached",
    "source=${localEnv:HOME}/.ssh/.env,target=/home/vscode/.env,type=bind,consistency=cached"
  ]
}

